###################################################################################################
#### Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
####
#### Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file
#### except in compliance with the License. A copy of the License is located at
####
####     http://aws.amazon.com/apache2.0/
####
#### or in the "license" file accompanying this file. This file is distributed on an "AS IS"
#### BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#### License for the specific language governing permissions and limitations under the License.
###################################################################################################

###################################################################################################
#### The following file installs and configures the AWS CloudWatch Logs agent to push logs to a Log
#### Group in CloudWatch Logs.
####
#### The configuration below sets the logs to be pushed, the Log Group name to push the logs to and
#### the Log Stream name as the instance id. The following files will be
#### streamed to CloudWatch Logs in near real time:
####
#### /var/log/eb-docker/containers/eb-current-app/syslog
#### Note that this file gets mapped to log group suffix /docker/pbs-server/log.log
####
#### You can then access the CloudWatch Logs by accessing the AWS CloudWatch Console and clicking
#### the "Logs" link on the left. The Log Group name will follow this format:
####
#### /aws/elasticbeanstalk/<environment name>/<full log name path>
####
#### Please note this configuration can be used additionally to the "Log Streaming" feature:
#### http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.cloudwatchlogs.html
####
#### Sources:
#### https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.cloudwatchlogs.html#:~:text=Custom%20log%20file%20streaming
#### https://github.com/awsdocs/elastic-beanstalk-samples/blob/master/configuration-files/aws-provided/instance-configuration/logs-streamtocloudwatch-linux.config
###################################################################################################

packages:
  yum:
    awslogs: []

files:
  "/etc/awslogs/awscli.conf" :
    mode: "000600"
    owner: root
    group: root
    content: |
      [plugins]
      cwlogs = cwlogs
      [default]
      region = `{"Ref":"AWS::Region"}`

  "/etc/awslogs/awslogs.conf" :
    mode: "000600"
    owner: root
    group: root
    content: |
      [general]
      state_file = /var/lib/awslogs/agent-state

  "/etc/awslogs/config/logs.conf" :
    mode: "000600"
    owner: root
    group: root
    content: |
      [/var/log/eb-docker/containers/eb-current-app/syslog]
      log_group_name = `{"Fn::Join":["/", ["/aws/elasticbeanstalk", { "Ref":"AWSEBEnvironmentName" }, "docker/pbs-server/log.log"]]}`
      log_stream_name = {instance_id}
      file = /var/log/eb-docker/containers/eb-current-app/syslog

  # Custom logrotate config file for scheduled cron runs
  "/etc/logrotatepbs/logrotate.pbs.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      /var/log/eb-docker/containers/eb-current-app/* {
      su root root
      rotate 1
      missingok
      compress
      notifempty
      copytruncate
      dateext
      dateformat %s
      olddir /var/log/eb-docker/containers/eb-current-app/rotated
      }

  # Delete existing rotated files and run logrotate with the given config file
  "/usr/local/bin/force_pbs_log_rotation.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      # Delete all currently rotated log files
      /usr/bin/find /var/log/eb-docker/containers/eb-current-app/rotated -name "*.gz" -delete
      # Perform log rotation
      /usr/sbin/logrotate -f /etc/logrotatepbs/logrotate.pbs.conf

      exit 0

  # Set up a cron job that runs the script /usr/local/bin/force_pbs_log_rotation.sh
  # every 10 minutes
  "/etc/cron.d/force_pbs_run_logrotate":
    mode: "000644"
    owner: root
    group: root
    content: |
      */10 * * * * root /usr/local/bin/force_pbs_log_rotation.sh

commands:
  "01":
    command: systemctl enable awslogsd.service
  "02":
    command: systemctl restart awslogsd
  "03":
    command: systemctl restart crond
